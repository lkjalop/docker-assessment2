@model IEnumerable<DockerAssessment.MvcApp.Models.Product>

@{
    ViewData["Title"] = "Products";
}

<h1>Products</h1>

<p>
    <a asp-action="Create" class="btn btn-success">Create New Product</a>
</p>

<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-4 mb-3">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                    <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                    <p class="card-text">
                        <strong>Price: $@Html.DisplayFor(modelItem => item.Price)</strong><br>
                        <small class="text-muted">Category: @Html.DisplayFor(modelItem => item.Category.Name)</small>
                    </p>
                    <div class="btn-group" role="group">
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-sm">Delete</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@if (!Model.Any())
{
    <div class="alert alert-info">
        <h4>No products found</h4>
        <p>There are currently no products in the database. <a asp-action="Create">Create a new product</a> to get started.</p>
    </div>
}
